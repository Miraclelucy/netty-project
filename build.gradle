group 'com.tenglu'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.netty', name: 'netty', version: '3.10.5.Final'
    compile group: 'io.netty', name: 'netty-all', version: '4.1.10.Final'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.7.0-rc1'
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.7.0-rc1'
    compile group: 'org.apache.thrift', name: 'libthrift', version: '0.12.0'
}


//--start--protobuf-gradle-plugin
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    }
}


sourceSets {
    main {
        proto {
            srcDir 'src/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
    }

    //generateProtoTasks.generatedFilesBaseDir = 'generated-sources'
    generateProtoTasks.generatedFilesBaseDir = 'src'

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
        }

        // In addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')

    }
}

//--end--protobuf-gradle-plugin


//--start--thrift--
